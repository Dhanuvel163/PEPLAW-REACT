[{"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\index.js":"1","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\App.js":"2","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\serviceWorker.js":"3","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\store.js":"4","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\mainComponent.js":"5","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\form.js":"6","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\profiledataReducer.js":"7","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\homeComponent.js":"8","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\lawerReducer.js":"9","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\userReducer.js":"10","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\errorReducer.js":"11","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\usercasesReducer.js":"12","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\loadingReducer.js":"13","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\allcasesReducer.js":"14","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Partials\\Snackbar\\Snackbar.js":"15","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Partials\\Header\\headerComponent.js":"16","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Lawyer\\Signup\\lawersignupComponent.js":"17","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Partials\\Footer\\footerComponent.js":"18","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\User\\Signup\\usersignupComponent.js":"19","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Lawyer\\Login\\lawerloginComponent.js":"20","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\User\\Login\\userloginComponent.js":"21","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Allcases\\allcasesComponent.js":"22","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Useredit\\usereditComponent.js":"23","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Mycases\\mycasesComponent.js":"24","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\User\\Addcase\\addcaseComponent.js":"25","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\actionTypes.js":"26","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\url.js":"27","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\service\\userservice.js":"28","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\CustomHooks\\useLazyloading.js":"29","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Useredit\\Usereditcard.js":"30","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Useredit\\usereditForm.js":"31","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Allcases\\cardprofile.js":"32","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Partials\\Formerror\\Formerror.js":"33","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\DetailpageReducer.js":"34","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\actionCreators.js":"35","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\UserDetail\\Userdetail.js":"36","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Fetchuserdata.js":"37","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Profiledata.js":"38","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Cases.js":"39","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Detailpage.js":"40","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Helpers\\Loading.js":"41","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Helpers\\Error.js":"42","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Helpers\\Fetchfunction.js":"43","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Mycases\\Head.js":"44","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Mycases\\Cardprofile.js":"45"},{"size":251,"mtime":1611247450620,"results":"46","hashOfConfig":"47"},{"size":700,"mtime":1610959066843,"results":"48","hashOfConfig":"47"},{"size":6492,"mtime":1610739164582,"results":"49","hashOfConfig":"47"},{"size":1164,"mtime":1611597401400,"results":"50","hashOfConfig":"47"},{"size":7949,"mtime":1611854564086,"results":"51","hashOfConfig":"47"},{"size":102,"mtime":1595825590744,"results":"52","hashOfConfig":"47"},{"size":592,"mtime":1611341172081,"results":"53","hashOfConfig":"47"},{"size":7712,"mtime":1611936249164,"results":"54","hashOfConfig":"47"},{"size":576,"mtime":1610037568829,"results":"55","hashOfConfig":"47"},{"size":969,"mtime":1610037599666,"results":"56","hashOfConfig":"47"},{"size":569,"mtime":1610037559997,"results":"57","hashOfConfig":"47"},{"size":1693,"mtime":1611508972111,"results":"58","hashOfConfig":"47"},{"size":361,"mtime":1610039927741,"results":"59","hashOfConfig":"47"},{"size":733,"mtime":1611343389132,"results":"60","hashOfConfig":"47"},{"size":1757,"mtime":1611861818716,"results":"61","hashOfConfig":"47"},{"size":11629,"mtime":1611927466999,"results":"62","hashOfConfig":"47"},{"size":7450,"mtime":1611856359546,"results":"63","hashOfConfig":"47"},{"size":15258,"mtime":1611389772143,"results":"64","hashOfConfig":"47"},{"size":7603,"mtime":1611857824034,"results":"65","hashOfConfig":"47"},{"size":4846,"mtime":1611856118036,"results":"66","hashOfConfig":"47"},{"size":5104,"mtime":1611857900474,"results":"67","hashOfConfig":"47"},{"size":5227,"mtime":1611856541335,"results":"68","hashOfConfig":"47"},{"size":3638,"mtime":1611859505563,"results":"69","hashOfConfig":"47"},{"size":7914,"mtime":1611859284965,"results":"70","hashOfConfig":"47"},{"size":7589,"mtime":1611860402967,"results":"71","hashOfConfig":"47"},{"size":1322,"mtime":1611592444858,"results":"72","hashOfConfig":"47"},{"size":66,"mtime":1599799206559,"results":"73","hashOfConfig":"47"},{"size":982,"mtime":1610739451285,"results":"74","hashOfConfig":"47"},{"size":1220,"mtime":1610959378310,"results":"75","hashOfConfig":"47"},{"size":6206,"mtime":1611860079062,"results":"76","hashOfConfig":"47"},{"size":11593,"mtime":1611859884789,"results":"77","hashOfConfig":"47"},{"size":5763,"mtime":1611857324897,"results":"78","hashOfConfig":"47"},{"size":640,"mtime":1610874178952,"results":"79","hashOfConfig":"47"},{"size":584,"mtime":1611598376139,"results":"80","hashOfConfig":"47"},{"size":5805,"mtime":1611594624975,"results":"81","hashOfConfig":"47"},{"size":4576,"mtime":1611859487999,"results":"82","hashOfConfig":"47"},{"size":1070,"mtime":1611344462766,"results":"83","hashOfConfig":"47"},{"size":4400,"mtime":1611345414674,"results":"84","hashOfConfig":"47"},{"size":7224,"mtime":1611508846487,"results":"85","hashOfConfig":"47"},{"size":1958,"mtime":1611597300730,"results":"86","hashOfConfig":"47"},{"size":208,"mtime":1611345432172,"results":"87","hashOfConfig":"47"},{"size":649,"mtime":1611345414674,"results":"88","hashOfConfig":"47"},{"size":827,"mtime":1611345442471,"results":"89","hashOfConfig":"47"},{"size":2167,"mtime":1611418158667,"results":"90","hashOfConfig":"47"},{"size":12228,"mtime":1611858654628,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"eec3d9",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\index.js",[],["190","191","192"],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\App.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\serviceWorker.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\store.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\mainComponent.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\form.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\profiledataReducer.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\homeComponent.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\lawerReducer.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\userReducer.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\errorReducer.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\usercasesReducer.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\loadingReducer.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\allcasesReducer.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Partials\\Snackbar\\Snackbar.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Partials\\Header\\headerComponent.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Lawyer\\Signup\\lawersignupComponent.js",["193","194","195","196"],"import React from 'react';\r\nimport {Control,Errors,Form} from 'react-redux-form';\r\nimport {Link,useHistory\r\n} from \"react-router-dom\";\r\nimport {postlawyersignup} from '../../../shared/Actioncreators/actionCreators'\r\nimport {connect} from 'react-redux';\r\nimport {actions} from 'react-redux-form';\r\nimport Formerror from '../../Partials/Formerror/Formerror';\r\n// import {Helmet} from 'react-helmet'\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    postlawyersignup:(name,email,password,mobile,history)=>dispatch(postlawyersignup(name,email,password,mobile,history)),\r\n    lawyersignupformreset:()=>dispatch(actions.reset('lawyersignupform'))\r\n})\r\nconst required=(val)=>(val)&&(val.length)\r\nconst minLength=(len)=>(val)=>(val)&&(val.length>=len)\r\nconst maxLength=(len)=>(val)=>(val)&&(val.length<=len)\r\nconst isNumber=(val)=>!isNaN(Number(val))\r\nconst isemail=(val)=>/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(val)\r\n\r\nfunction Lawyersignup(props){\r\n    let history = useHistory()\r\n    const handlesubmit=(values)=>{\r\n            props.postlawyersignup(values.username,values.email,values.password,values.mobile,history);\r\n            props.lawyersignupformreset();\r\n    }\r\n    return(\r\n            <div className=\"container\" style={{marginTop:50,marginBottom:50}}>\r\n                {/* <Helmet>\r\n                    <title>LAWYER SIGNUP | PEPLAW</title>\r\n                    <meta name=\"description\" content=\"lawyer signup page\"/>\r\n                </Helmet> */}\r\n                {true && (document.title='LAWYER SIGNUP | PEPLAW')?null:null}\r\n                <h4 className=\"text-center\">Lawyer Signup</h4>\r\n                <div className=\"container\" style={{marginTop:50}}>\r\n                <hr></hr>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                        <Form model='lawyersignupform' onSubmit={(values)=>handlesubmit(values)}>\r\n                                <div className='form-group'>\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <Control.text model=\".username\" className='form-control' name=\"username\" id=\"username\"\r\n                                     placeholder=\"Username\"\r\n                                     validators={{required,minLength:minLength(6),maxLength:maxLength(20)}}/>\r\n                                    <Errors\r\n                                     model='.username'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\nusername is required !!',\r\n                                         minLength:'\\nusername should has minimum 6 characters !!',\r\n                                         maxLength:'\\nusername should has maximum 20 characters only !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleEmail\">Email</label>\r\n                                    <Control.text model=\".email\" className='form-control' name=\"email\" id=\"exampleEmail\"\r\n                                     placeholder=\"Email\"\r\n                                     validators={{required,isemail}}/>\r\n                                     <Errors\r\n                                     model='.email'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\nEmail is required !!',\r\n                                         isemail:'\\nEnter a valid email !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"examplePassword\">Password</label>\r\n                                    <Control.password model=\".password\" className='form-control' name=\"password\" id=\"examplePassword\" \r\n                                    placeholder=\"password\"\r\n                                    validators={{required,minLength:minLength(6),maxLength:maxLength(20)}}/>\r\n                                     <Errors\r\n                                     model='.password'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\npassword is required !!',\r\n                                         minLength:'\\npassword should has minimum 6 characters !!',\r\n                                         maxLength:'\\npassword should has maximum 20 characters only !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"mobile\">Phone Number</label>\r\n                                    <Control.text model=\".mobile\" className='form-control' name=\"mobile\" id=\"mobile\"\r\n                                     placeholder=\"mobile\"\r\n                                     validators={{required,minLength:minLength(10),maxLength:maxLength(10),isNumber}}/>\r\n                                     <Errors\r\n                                     model='.mobile'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\nMobile Number is required !!',\r\n                                         minLength:'\\nMobile Number should has 10 characters !!',\r\n                                         maxLength:'\\nMobile Number should has 10 characters !!',\r\n                                         isNumber:'\\nEnter a valid phone Number !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                    <Link to=\"/user/signup\" className=\"nav-link\">\r\n                                        <p style={{color:'white'}}>Are you a user ?</p>\r\n                                    </Link>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <button className=\"btn btn-secondary\">Sign Up</button>\r\n                                </div>\r\n                            </Form>         \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"container\">\r\n                            <img alt=\"LAWYER SIGNUP\" style={{width:'inherit',marginTop:30}} src=\"/assets/lawyersignup.svg\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Lawyersignup);\r\n","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Partials\\Footer\\footerComponent.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\User\\Signup\\usersignupComponent.js",["197","198","199","200"],"import React from 'react';\r\nimport {Control,LocalForm,Errors} from 'react-redux-form';\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {postusersignup} from '../../../shared/Actioncreators/actionCreators';\r\nimport Formerror from '../../Partials/Formerror/Formerror';\r\n// import {Helmet} from 'react-helmet'\r\nconst mapStateToProps=state=>{\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    postusersignup:(name,email,password,mobile,history)=>dispatch(postusersignup(name,email,password,mobile,history)),\r\n})\r\nconst required=(val)=>(val)&&(val.length)\r\nconst minLength=(len)=>(val)=>(val)&&(val.length>=len)\r\nconst maxLength=(len)=>(val)=>(val)&&(val.length<=len)\r\nconst isNumber=(val)=>!isNaN(Number(val))\r\nconst isemail=(val)=>/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(val)\r\n\r\nfunction Usersignup(props){\r\n    let history = useHistory()\r\n    const handlesubmit=(values)=>{\r\n        props.postusersignup(values.username,values.email,values.password,values.mobile,history);\r\n    }\r\n        return(\r\n            <div className=\"container\" style={{marginTop:50,marginBottom:50}}>\r\n                {/* <Helmet>\r\n                    <title>USER SIGNUP | PEPLAW</title>\r\n                    <meta name=\"description\" content=\"user signup page\" />\r\n                </Helmet> */}\r\n                {true && (document.title='USER SIGNUP | PEPLAW')?null:null}\r\n                <h4 className=\"text-center\">User Signup</h4>\r\n                <div className=\"container\" style={{marginTop:50}}>\r\n                <hr></hr>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <LocalForm onSubmit={(values)=>handlesubmit(values)}>\r\n                                <div className='form-group'>\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <Control.text model=\".username\" className='form-control' name=\"username\" id=\"username\"\r\n                                     placeholder=\"Username\"\r\n                                     validators={{\r\n                                        required,minLength:minLength(6),maxLength:maxLength(20)\r\n                                     }}/>\r\n                                    <Errors\r\n                                     model='.username'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\nusername is required !!',\r\n                                         minLength:'\\nusername should has minimum 6 characters !!',\r\n                                         maxLength:'\\nusername should has maximum 20 characters only !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleEmail\">Email</label>\r\n                                    <Control.text model=\".email\" className='form-control' name=\"email\" id=\"exampleEmail\"\r\n                                     placeholder=\"Email\"\r\n                                     validators={{\r\n                                        required,isemail\r\n                                     }}/>\r\n                                     <Errors\r\n                                     model='.email'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\nEmail is required !!',\r\n                                         isemail:'\\nEnter a valid email !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"examplePassword\">Password</label>\r\n                                    <Control.password model=\".password\" className='form-control' name=\"password\" id=\"examplePassword\" \r\n                                    placeholder=\"password\"\r\n                                    validators={{\r\n                                        required,minLength:minLength(6),maxLength:maxLength(20)\r\n                                     }}/>\r\n                                     <Errors\r\n                                     model='.password'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\npassword is required !!',\r\n                                         minLength:'\\npassword should has minimum 6 characters !!',\r\n                                         maxLength:'\\npassword should has maximum 20 characters only !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"mobile\">Phone Number</label>\r\n                                    <Control.text model=\".mobile\" className='form-control' name=\"mobile\" id=\"mobile\"\r\n                                     placeholder=\"mobile\"\r\n                                     validators={{\r\n                                        required,minLength:minLength(10),maxLength:maxLength(10),isNumber\r\n                                     }}/>\r\n                                     <Errors\r\n                                     model='.mobile'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\nmobile is required !!',\r\n                                         minLength:'\\nmobile should has minimum 6 characters !!',\r\n                                         maxLength:'\\nmobile should has maximum 20 characters only !!',\r\n                                         isNumber:'\\nEnter a valid phone Number !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                    <Link to=\"/lawyer/signup\" className=\"nav-link\">\r\n                                        <p style={{color:'white'}}>Are you a lawyer ?</p>\r\n                                    </Link>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <button className=\"btn btn-secondary\">Sign Up</button>\r\n                                </div>\r\n                            </LocalForm>        \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"container\">\r\n                            <img className=\"media\" alt=\"USER SIGNUP\" style={{width:'inherit',marginTop:30}} src=\"/assets/usersignup.svg\"></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Usersignup);\r\n","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Lawyer\\Login\\lawerloginComponent.js",["201","202"],"import React from 'react';\r\nimport {Control,LocalForm,Errors} from 'react-redux-form';\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {postlawyersignin} from '../../../shared/Actioncreators/actionCreators'\r\nimport Formerror from '../../Partials/Formerror/Formerror';\r\n// import {Helmet} from 'react-helmet'\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    postlawyersignin:(email,password,history)=>dispatch(postlawyersignin(email,password,history)),\r\n})\r\nconst required=(val)=>(val)&&(val.length)\r\nconst isemail=(val)=>/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(val)\r\nfunction Lawyerlogin(props){\r\n    let history = useHistory()\r\n    const handlesubmit=(values)=>{\r\n        props.postlawyersignin(values.email,values.password,history);\r\n    }\r\n        return(\r\n            <div className=\"container\" style={{marginTop:50,marginBottom:50}}>\r\n                {/* <Helmet>\r\n                    <title>LAWYER LOGIN | PEPAW</title>\r\n                    <meta name=\"description\" content=\"lawyer login page\"/>\r\n                </Helmet> */}\r\n                {true && (document.title='LAWYER LOGIN | PEPLAW')?null:null}\r\n                <h4 className=\"text-center\">Lawyer Login</h4>\r\n                <div className=\"container\" style={{marginTop:50}}>\r\n                <hr></hr>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6 d-flex align-items-center\">\r\n                            <LocalForm onSubmit={(values)=>handlesubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleEmail\">Email</label>\r\n                                    <Control.text model=\".email\" className='form-control' name=\"email\" id=\"exampleEmail\"\r\n                                     placeholder=\"Email\"\r\n                                     validators={{required,isemail}}/>\r\n                                     <Errors\r\n                                     model='.email'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\nEmail is required !!',\r\n                                         isemail:'\\nEnter a valid email !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"examplePassword\">Password</label>\r\n                                    <Control.password model=\".password\" className='form-control' name=\"password\" id=\"examplePassword\" \r\n                                    placeholder=\"password\"\r\n                                    validators={{required}}/>\r\n                                     <Errors\r\n                                     model='.password'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'password is required !!',\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                    <Link to=\"/user/login\" className=\"nav-link\">\r\n                                        <p style={{color:'white'}}>Are you a user ?</p>\r\n                                    </Link>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <button className=\"btn btn-secondary\">Sign in</button>\r\n                                </div>\r\n                            </LocalForm>        \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"container\">\r\n                            <img className=\"media\" style={{width:'inherit',marginTop:30}} alt=\"LAWYER LOGIN\" src=\"/assets/loginlawyer.svg\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <h5 style={{textAlign:'center'}}>OR</h5>\r\n                    <div  style={{color:'white',display:'flex',justifyContent:'center'}}>\r\n                        <Link to=\"/lawyer/signup\" className=\"nav-link\">\r\n                        <button className=\"btn btn-warning\">Click here to Signup</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Lawyerlogin);\r\n","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\User\\Login\\userloginComponent.js",["203","204"],"import React from 'react';\r\nimport {Control,LocalForm,Errors} from 'react-redux-form';\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {postusersignin} from '../../../shared/Actioncreators/actionCreators'\r\nimport Formerror from '../../Partials/Formerror/Formerror';\r\n// import {Helmet} from 'react-helmet'\r\nconst mapStateToProps=state=>{\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    postusersignin:(email,password,history)=>dispatch(postusersignin(email,password,history)),\r\n})\r\nconst required=(val)=>(val)&&(val.length)\r\nconst isemail=(val)=>/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(val)\r\nfunction Userlogin(props){\r\n    let history = useHistory()\r\n    const handlesubmit=(values)=>{\r\n        props.postusersignin(values.email,values.password,history);\r\n    }\r\n        return(\r\n            <div className=\"container\" style={{marginTop:50,marginBottom:50}}>\r\n                {/* <Helmet>\r\n                    <title>USER LOGIN | PEPLAW</title>\r\n                    <meta name=\"description\" content=\"user login page\" />\r\n                </Helmet> */}\r\n                {true && (document.title='USER LOGIN | PEPLAW')?null:null}\r\n                <h4 className=\"text-center\">User Login</h4>\r\n                <div className=\"container\" style={{marginTop:50}}>\r\n                <hr></hr>\r\n                    <div className=\"row\">\r\n                        <div xs=\"12\" sm=\"6\" className=\"col-12 col-sm-6 d-flex align-items-center\">\r\n                            <LocalForm onSubmit={(values)=>handlesubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleEmail\">Email</label>\r\n                                    <Control.text model=\".email\" className='form-control' name=\"email\" id=\"exampleEmail\"\r\n                                     placeholder=\"Email\"\r\n                                     validators={{\r\n                                        required,isemail\r\n                                     }}/>\r\n                                     <Errors\r\n                                     model='.email'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'\\nEmail is required !!',\r\n                                         isemail:'\\nEnter a valid email !!'\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"examplePassword\">Password</label>\r\n                                    <Control.password model=\".password\" className='form-control' name=\"password\" id=\"examplePassword\" \r\n                                    placeholder=\"password\"\r\n                                    validators={{\r\n                                        required\r\n                                     }}/>\r\n                                     <Errors\r\n                                     model='.password'\r\n                                     show=\"touched\"\r\n                                     component={(props)=><Formerror props={props}/>}\r\n                                     messages={{\r\n                                         required:'password is required !!',\r\n                                     }}\r\n                                     ></Errors>\r\n                                </div>\r\n                                    <Link to=\"/lawyer/login\" className=\"nav-link\">\r\n                                        <p style={{color:'white'}}>Are you a lawyer ?</p>\r\n                                    </Link>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <button className=\"btn btn-secondary\">Sign in</button>\r\n                                </div>\r\n                            </LocalForm>        \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"container\">\r\n                            <img className=\"media\" alt=\"USER LOGIN\" style={{\r\n                                width:'inherit',\r\n                                marginTop:30}} \r\n                            src=\"/assets/userlogin.svg\"></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <h5 style={{textAlign:'center'}}>OR</h5>\r\n                    <div  style={{color:'white',display:'flex',justifyContent:'center'}}>\r\n                        <Link to=\"/user/signup\" className=\"nav-link\">\r\n                        <button className=\"btn btn-warning\">Click here to Signup</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Userlogin);\r\n","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Allcases\\allcasesComponent.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Useredit\\usereditComponent.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Mycases\\mycasesComponent.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\User\\Addcase\\addcaseComponent.js",["205","206","207","208","209"],"import React from 'react';\r\nimport {Control,LocalForm,Errors} from 'react-redux-form';\r\nimport {postusercase} from '../../../shared/Actioncreators/actionCreators'\r\nimport {connect} from 'react-redux';\r\nimport Formerror from '../../Partials/Formerror/Formerror';\r\n// import {Helmet} from 'react-helmet'\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    postusercase:(dcode,ddate,stime,acharge,desc)=>dispatch(postusercase(dcode,ddate,stime,acharge,desc)),\r\n})\r\nconst required=(val)=>(val)&&(val.length)\r\n\r\nfunction Addcase(props){\r\n    const handlesubmit=(values)=>{\r\n        props.postusercase(values['disposition-code'],values['disposition-date'],\r\n        values['sentence-time'],values['amended-charge'],values['description']);\r\n        setTimeout(()=>{\r\n        props.install();\r\n        },2000)\r\n    }\r\n    return(\r\n        <div className=\"container\" style={{marginTop:50,marginBottom:50}}>\r\n            {/* <Helmet>\r\n                <title>ADD CASE | PEPLAW</title>\r\n                <meta name=\"description\" content=\"Add case page\" />\r\n            </Helmet> */}\r\n                {true && (document.title='ADD CASE | PEPLAW')?null:null}\r\n            <h4 className=\"text-center\">\r\n                    <svg style={{marginRight:11}}\r\n                    xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-journal-plus\" viewBox=\"0 0 16 16\">\r\n                    <path fillRule=\"evenodd\" d=\"M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z\"/>\r\n                    <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\"/>\r\n                    <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\"/>\r\n                    </svg> \r\n                 Add Case</h4>\r\n            <div className=\"container\" style={{marginTop:50}}>\r\n            <hr></hr>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-6 d-flex align-items-center\">\r\n                        <LocalForm onSubmit={(values)=>handlesubmit(values)}>\r\n                            <div className='form-group'>\r\n                                <label htmlFor=\"disposition-code\">Disposition code</label>\r\n                                <Control.text model=\".disposition-code\" className='form-control'\r\n                                    placeholder=\"Disposition code\"\r\n                                    validators={{\r\n                                    required\r\n                                    }}/>\r\n                                <Errors\r\n                                model='.disposition-code'\r\n                                show=\"touched\"\r\n                                component={(props)=><Formerror props={props}/>}\r\n                                messages={{\r\n                                    required:'Disposition code is required !!',\r\n                                }}\r\n                                ></Errors>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-sm-6\">\r\n                                    <div className='form-group'>\r\n                                    <label htmlFor=\"disposition-date\">Disposition Date</label>\r\n                                    <Control.text model=\".disposition-date\" className='form-control'\r\n                                    placeholder=\"Disposition date\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}/>\r\n                                    <Errors\r\n                                    model='.disposition-date'\r\n                                    show=\"touched\"\r\n                                    component={(props)=><Formerror props={props}/>}\r\n                                    messages={{\r\n                                        required:'Disposition date is required !!',\r\n                                    }}\r\n                                    ></Errors>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-sm-6\">\r\n                                    <div className='form-group'>\r\n                                    <label htmlFor=\"sentence-time\">Sentence Time</label>\r\n                                    <Control.text model=\".sentence-time\" className='form-control'\r\n                                    placeholder=\"sentence-time\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}/>\r\n                                    <Errors\r\n                                    model='.sentence-time'\r\n                                    show=\"touched\"\r\n                                    component={(props)=><Formerror props={props}/>}\r\n                                    messages={{\r\n                                        required:'Sentence Time is required !!',\r\n                                    }}\r\n                                    ></Errors>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor=\"sentence-time\">Amended Charge</label>\r\n                                <Control.text model=\".amended-charge\" className='form-control'\r\n                                    placeholder=\"Amended Charge\"\r\n                                    validators={{\r\n                                    required\r\n                                    }}/>\r\n                                <Errors\r\n                                    model='.amennded-charge'\r\n                                    show=\"touched\"\r\n                                    component={(props)=><Formerror props={props}/>}\r\n                                    messages={{\r\n                                        required:'Amended Charge is required !!',\r\n                                    }}\r\n                                    ></Errors>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor=\"sentence-time\">Description</label>\r\n                                <Control.textarea model=\".description\" className='form-control'\r\n                                    placeholder=\"Description\"\r\n                                    />\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                            <button className=\"btn btn-secondary\">Add</button>\r\n                            </div>\r\n                        </LocalForm>        \r\n                    </div>\r\n                    <div className=\"col\" >\r\n                        <div className=\"container\">\r\n                        <img alt=\"PROFILE EDIT\" style={{width:'inherit',marginTop:30}} \r\n                        src=\"/assets/add1.svg\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr></hr>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Addcase);\r\n","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\actionTypes.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\url.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\service\\userservice.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\CustomHooks\\useLazyloading.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Useredit\\Usereditcard.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Useredit\\usereditForm.js",["210","211","212","213","214","215","216"],"import React from \"react\";\r\n// import React,{useState,useEffect} from \"react\";\r\nimport { Control, Errors, LocalForm  } from \"react-redux-form\";\r\nimport {islawyerloggedin} from \"../../../service/userservice\";\r\n// import {islawyerloggedin,isuserloggedin} from \"../../../service/userservice\";\r\n// import * as country_city from '../../../shared/city-country.json'\r\n// import * as state_country from '../../../shared/state-country.json'\r\nimport Formerror from '../../Partials/Formerror/Formerror';\r\n\r\nconst required = (val) => val && val.length;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst maxLength = (len) => (val) => val && val.length <= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n// let countryData = country_city.default.data\r\n// let stateData = state_country.default.data\r\nfunction UsereditForm(props){\r\n    // let [country,setCountry]=useState(null)\r\n    // let [stateCountry,setstateCountry]=useState(null)\r\n    const  handlesubmit=(values)=> {\r\n        props.postprofiledata(values.username,values.mobile,values.country,values.city,values.address,values.state,values.pincode);\r\n        props.clearEdit()\r\n    }\r\n    // const  handlechange=(values)=> {\r\n    //     setCountry(countryData.findIndex((d)=>d.country===values.country))\r\n    //     setstateCountry(stateData.findIndex((d)=>d.name===values.country))\r\n    // }\r\n    // useEffect(()=>{\r\n    //     if(! country){\r\n    //     if(islawyerloggedin() && props.profiledata.profiledata.lawyer){\r\n    //         setCountry(countryData.findIndex((d)=>d.country===props.profiledata.profiledata.lawyer.country))\r\n    //         setstateCountry(stateData.findIndex((d)=>d.name===props.profiledata.profiledata.lawyer.country))\r\n    //     }else if(isuserloggedin() && props.profiledata.profiledata.user){\r\n    //         setCountry(countryData.findIndex((d)=>d.country===props.profiledata.profiledata.user.country))\r\n    //         setstateCountry(stateData.findIndex((d)=>d.name===props.profiledata.profiledata.user.country))\r\n    //     }\r\n    //     }\r\n    // },[country,props,stateCountry])\r\n    return(\r\n          <div className=\"container\" style={{ marginTop: 50 }}>\r\n            <hr></hr>\r\n                <h4 className=\"text-center\"> \r\n                  <svg style={{marginRight:6}}\r\n                  xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-pen\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M13.498.795l.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z\"/>\r\n                  </svg>\r\n                 Edit Here! </h4>\r\n            <div className=\"row\" style={{ marginTop: 50, marginBottom: 50 }}>\r\n              <div className=\"col-12 col-sm-6 mb-5\">\r\n                <LocalForm\r\n                  initialState={\r\n                    islawyerloggedin()\r\n                    ?\r\n                    {\r\n                      username:props.profiledata.profiledata.lawyer.name,\r\n                      country:props.profiledata.profiledata.lawyer.country,\r\n                      city:props.profiledata.profiledata.lawyer.city,\r\n                      mobile:props.profiledata.profiledata.lawyer.mobile,\r\n                      address:props.profiledata.profiledata.lawyer.address ? props.profiledata.profiledata.lawyer.address.addr1 : '',\r\n                      pincode:props.profiledata.profiledata.lawyer.address ? props.profiledata.profiledata.lawyer.address.postalCode : '',\r\n                      state:props.profiledata.profiledata.lawyer.address ? props.profiledata.profiledata.lawyer.address.state : ''\r\n                    }\r\n                    :\r\n                    {\r\n                      username:props.profiledata.profiledata.user.name,\r\n                      country:props.profiledata.profiledata.user.country,\r\n                      city:props.profiledata.profiledata.user.city,\r\n                      mobile:props.profiledata.profiledata.user.mobile,\r\n                      address:props.profiledata.profiledata.user.address ? props.profiledata.profiledata.user.address.addr1 : '',\r\n                      pincode:props.profiledata.profiledata.user.address ? props.profiledata.profiledata.user.address.postalCode : '',\r\n                      state:props.profiledata.profiledata.user.address ? props.profiledata.profiledata.user.address.state : ''\r\n                    }\r\n                  }\r\n                  onSubmit={(values) => handlesubmit(values)}\r\n                  // onChange={(values) => handlechange(values)}\r\n                >\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Control.text model=\".username\" className=\"form-control\" name=\"username\" id=\"username\" placeholder=\"Username\"\r\n                      validators={{required, minLength: minLength(6), maxLength: maxLength(20),}}\r\n                    />\r\n                    <Errors\r\n                      model=\".username\" show=\"touched\" component={(props)=><Formerror props={props}/>}\r\n                      messages={{\r\n                        required: \"\\nusername is required !!\", minLength: \"\\nusername should has minimum 6 characters !!\",\r\n                        maxLength: \"\\nusername should has maximum 20 characters only !!\",\r\n                      }}\r\n                    ></Errors>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                      <div className=\"col-12 col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"mobile\">Phone Number</label>\r\n                          <Control.text\r\n                            model=\".mobile\" className=\"form-control\" name=\"mobile\" id=\"mobile\" placeholder=\"mobile\"\r\n                            validators={{required, minLength: minLength(10), maxLength: maxLength(10), isNumber, }}\r\n                          />\r\n                          <Errors\r\n                            model=\".mobile\" show=\"touched\" component={(props)=><Formerror props={props}/>} \r\n                            messages={{\r\n                              required: \"\\nMobile Number is required !!\",\r\n                              minLength: \"\\nMobile Number should has 10 characters !!\",\r\n                              maxLength: \"\\nMobile Number should has 10 characters !!\",\r\n                              isNumber: \"\\nEnter a valid phone Number !!\",\r\n                            }}\r\n                          ></Errors>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12 col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                        <label htmlFor=\"country\">Country</label>\r\n                          <Control.text model=\".country\" list=\"countries\" className=\"form-control\" name=\"country\" placeholder=\"Country\"\r\n                          />\r\n                        <datalist id=\"countries\">\r\n                          {/* {\r\n                            countryData.map((d)=>(\r\n                              <option key={d.country} value={d.country}></option>\r\n                            ))\r\n                          } */}\r\n                        </datalist>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <Control.text\r\n                      model=\".address\" className=\"form-control\" name=\"address\" id=\"address\" placeholder=\"address\"\r\n                    />\r\n                  </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                          {\r\n                            // (country && countryData[country] && countryData[country].cities)\r\n                            // ?\r\n                            <div className=\"form-group\">\r\n                            <label htmlFor=\"city\">City</label>\r\n                            <Control.text model=\".city\" list=\"cities\" className=\"form-control\" name=\"city\" placeholder=\"City\"\r\n                            />\r\n                            <datalist id=\"cities\">\r\n                              {/* {\r\n                                countryData[country].cities.map((d,index)=>(\r\n                                  <option key={index} value={d}></option>\r\n                                ))\r\n                              } */}\r\n                            </datalist>\r\n                            </div>\r\n                            // :\r\n                            // null\r\n                          }\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6\">\r\n                          {\r\n                            // (stateCountry && stateData[stateCountry] && stateData[stateCountry].states && stateData[stateCountry].states.length>0)\r\n                            // ?\r\n                            <div className=\"form-group\">\r\n                            <label htmlFor=\"state\">State</label>\r\n                            <Control.text model=\".state\" list=\"states\" className=\"form-control\" name=\"state\" placeholder=\"State\"\r\n                            />\r\n                            <datalist id=\"states\">\r\n                              {/* {\r\n                                stateData[stateCountry].states.map((d,index)=>(\r\n                                  <option key={index} value={d.name}></option>\r\n                                ))\r\n                              } */}\r\n                            </datalist>\r\n                            </div>\r\n                            // :\r\n                            // null\r\n                          }\r\n                        </div>\r\n                    </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"pincode\">Pincode</label>\r\n                    <Control.text\r\n                      model=\".pincode\" className=\"form-control\" name=\"pincode\" id=\"pincode\" placeholder=\"Pincode\"\r\n                      validators={{minLength: minLength(6), maxLength: maxLength(6), isNumber, }}\r\n                    />\r\n                    <Errors\r\n                      model=\".pincode\" show=\"touched\" component={(props)=><Formerror props={props}/>} messages={{\r\n                        minLength: \"\\npincode Number should has 6 characters !!\",\r\n                        maxLength: \"\\npincode Number should has 6 characters !!\",\r\n                        isNumber: \"\\nEnter a valid phone Number !!\"\r\n                      }}\r\n                    ></Errors>\r\n                  </div>\r\n\r\n                  <div  className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-secondary\" type=\"submit\" >\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n\r\n                </LocalForm>\r\n              </div>\r\n              <div className=\"col container d-flex justify-content-center align-items-center mb-5 p-5\">\r\n                  <img alt=\"EDIT\" style={{width:'inherit',height:'inherit'}} \r\n                  src=\"/assets/edit.svg\"/>\r\n              </div>\r\n            </div>\r\n            <hr></hr>\r\n          </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UsereditForm","E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Allcases\\cardprofile.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Partials\\Formerror\\Formerror.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Reducer\\DetailpageReducer.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\actionCreators.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\UserDetail\\Userdetail.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Fetchuserdata.js",[],["217","218","219"],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Profiledata.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Cases.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Detailpage.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Helpers\\Loading.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Helpers\\Error.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\shared\\Actioncreators\\Helpers\\Fetchfunction.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Mycases\\Head.js",[],"E:\\PRGMS\\REACT\\PEP-LAW\\5 PEP_LAW\\src\\Components\\Common\\Mycases\\Cardprofile.js",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":46,"column":37,"nodeType":"228","endLine":48,"endColumn":110},{"ruleId":"226","severity":1,"message":"227","line":62,"column":37,"nodeType":"228","endLine":64,"endColumn":71},{"ruleId":"226","severity":1,"message":"229","line":77,"column":37,"nodeType":"228","endLine":79,"endColumn":109},{"ruleId":"226","severity":1,"message":"227","line":93,"column":37,"nodeType":"228","endLine":95,"endColumn":120},{"ruleId":"226","severity":1,"message":"227","line":41,"column":37,"nodeType":"228","endLine":45,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":59,"column":37,"nodeType":"228","endLine":63,"endColumn":42},{"ruleId":"226","severity":1,"message":"229","line":76,"column":37,"nodeType":"228","endLine":80,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":94,"column":37,"nodeType":"228","endLine":98,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":38,"column":37,"nodeType":"228","endLine":40,"endColumn":71},{"ruleId":"226","severity":1,"message":"229","line":53,"column":37,"nodeType":"228","endLine":55,"endColumn":62},{"ruleId":"226","severity":1,"message":"227","line":37,"column":37,"nodeType":"228","endLine":41,"endColumn":42},{"ruleId":"226","severity":1,"message":"229","line":54,"column":37,"nodeType":"228","endLine":58,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":47,"column":33,"nodeType":"228","endLine":51,"endColumn":41},{"ruleId":"226","severity":1,"message":"227","line":65,"column":37,"nodeType":"228","endLine":69,"endColumn":41},{"ruleId":"226","severity":1,"message":"227","line":83,"column":37,"nodeType":"228","endLine":87,"endColumn":41},{"ruleId":"226","severity":1,"message":"227","line":101,"column":33,"nodeType":"228","endLine":105,"endColumn":41},{"ruleId":"226","severity":1,"message":"230","line":117,"column":33,"nodeType":"228","endLine":119,"endColumn":39},{"ruleId":"226","severity":1,"message":"227","line":78,"column":21,"nodeType":"228","endLine":80,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":94,"column":27,"nodeType":"228","endLine":97,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":112,"column":27,"nodeType":"228","endLine":113,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":127,"column":21,"nodeType":"228","endLine":129,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":139,"column":29,"nodeType":"228","endLine":140,"endColumn":31},{"ruleId":"226","severity":1,"message":"227","line":159,"column":29,"nodeType":"228","endLine":160,"endColumn":31},{"ruleId":"226","severity":1,"message":"227","line":177,"column":21,"nodeType":"228","endLine":180,"endColumn":23},{"ruleId":"220","replacedBy":"231"},{"ruleId":"222","replacedBy":"232"},{"ruleId":"224","replacedBy":"233"},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"jsx-a11y/accessible-emoji",[],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["234"],["235"],[],"no-global-assign","no-unsafe-negation"]